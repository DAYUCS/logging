apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentd-output
  namespace: loki
data:
  fluentd.conf: |
    # Ignore fluentd own events
    <label @FLUENT_LOG>
      <match fluent.*>
        @type stdout
      </match>
    </label>

    # TCP input to receive logs from
    <source>
      @type forward
      bind 0.0.0.0
      port 24224
    </source>

    # HTTP input for the liveness and readiness probes
    <source>
      @type http
      bind 0.0.0.0
      port 9880
    </source>

    # Throw the healthcheck to the standard output
    <match fluentd.healthcheck>
      @type stdout
    </match>

    # Send the logs to the standard output
    <match fluend.**>
      @type stdout
    </match>

    # Send the ops logs to the loki and the standard output    
    <match ops.kube.var.log.containers.**>
      @type copy
      @id output_copy_ops
      <store>
        @type loki
        url "http://loki-gateway:80"
        tenant 1
        <label>
          stream $.stream
          namespace $.kubernetes.namespace_name
          container $.kubernetes.container_name
          app $.kubernetes.labels.app
          node $.kubernetes.host
          pod $.kubernetes.pod_name
        </label>
        line_format json
        flush_interval 10s
        flush_at_shutdown true
        buffer_chunk_limit 5m
      </store>
      <store>
        @type stdout
      </store>
    </match>

    # Send the prod logs to the ES and the standard output    
    <match ops.kube.var.log.containers.**>
      @type copy
      @id output_copy_prod
      #<store>
      #  @type elasticsearch_dynamic
      #  @id output_elasticsearch_ops
      #  host <elasticsearch-host>
      #  port 9200
      #  logstash_format true
      #  logstash_prefix kube-ops.\${record['kubernetes']['namespace_name']}
      #  <buffer>
      #    @type file
      #    path /opt/bitnami/fluentd/logs/buffers/ops-logs.buffer
      #    flush_thread_count 2
      #    flush_interval 5s
      #  </buffer>
      #</store>
      <store>
        @type stdout
      </store>
    </match>

    # Throw away fluent & fluentd logs
    <match kube.var.log.containers.**fluent**.log>
      @type null
    </match>

    # Rewrite tags based on which namespace the logs come from
    <match kube.var.log.containers.**>
      @type rewrite_tag_filter
      <rule>
        key \$['kubernetes']['namespace_name']
        pattern /^(rook-ceph|kube-system|kube-public|kube-node-[\S]+)$/
        tag ops.\${tag}
      </rule>
      <rule>
        key     \$['kubernetes']['namespace_name']
        pattern /.+/
        tag     prod.\${tag}
      </rule>
    </match>